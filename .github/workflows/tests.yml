name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'

    - name: List available simulators
      run: xcrun simctl list devices --json | jq '.devices | to_entries[] | select(.key | contains("iOS")) | .key'

    - name: Build and Test Swift Package
      run: swift test --verbose

    - name: Build iOS Example
      run: |
        cd Example/VoticeDemo
        
        # Try with iPhone 15 first
        if xcodebuild -project VoticeDemo.xcodeproj \
                      -scheme VoticeDemo \
                      -destination 'platform=iOS Simulator,name=iPhone 15' \
                      build \
                      CODE_SIGN_IDENTITY="" \
                      CODE_SIGNING_REQUIRED=NO; then
          echo "Build successful with iPhone 15"
        # Fallback to iPhone 14 if iPhone 15 is not available
        elif xcodebuild -project VoticeDemo.xcodeproj \
                        -scheme VoticeDemo \
                        -destination 'platform=iOS Simulator,name=iPhone 14' \
                        build \
                        CODE_SIGN_IDENTITY="" \
                        CODE_SIGNING_REQUIRED=NO; then
          echo "Build successful with iPhone 14"
        # Final fallback to any iOS simulator
        else
          echo "Trying with any available iOS simulator..."
          xcodebuild -project VoticeDemo.xcodeproj \
                     -scheme VoticeDemo \
                     -destination 'generic/platform=iOS Simulator' \
                     build \
                     CODE_SIGN_IDENTITY="" \
                     CODE_SIGNING_REQUIRED=NO
        fi